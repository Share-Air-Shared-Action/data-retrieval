# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
30 20 * * * ./import-sql.sh
3 0 * * * /data/sasa_airquality/metone/curlmetone.sh
10 0 * * * /data/sasa_airquality/metone/metoneload.sh

3 0 * * * /data/sasa_airquality/purpleair/curlpurple.sh
10 0 * * * /data/sasa_airquality/purpleair/purpleairload.sh

3 0 * * * /data/sasa_airquality/airbeamterrier/curlairterrier.sh
10 0 * * * /data/sasa_airquality/airbeamterrier/airterrierload.sh

3 0 * * * /data/sasa_airquality/aeroqual/Little\ Village/load.sh

20 0 * * * psql -d sasa_airquality -f /data/sasa_airquality/triggers.sql

#run all crontab operations from root 'postgres' user only
